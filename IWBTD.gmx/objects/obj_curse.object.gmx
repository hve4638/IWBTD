<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursejump</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enable=0;
alarm[0]=150;
lastx=Me.x;
lasty=Me.y;

d_x=ds_queue_create();
d_y=ds_queue_create();
d_s=ds_queue_create();
d_i=ds_queue_create();
d_xs=ds_queue_create();
d_ys=ds_queue_create();

scp_echo_create(5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var k=instance_create(lastx,lasty,obj_charge);
k.image_blend=c_purple; k.image_alpha=0.8;
k.get_xscale=0.1; k.get_yscale=0.1;
k.ktime=3;


ds_queue_destroy(d_x);
ds_queue_destroy(d_y);
ds_queue_destroy(d_s);
ds_queue_destroy(d_i);
ds_queue_destroy(d_xs);
ds_queue_destroy(d_ys);


scp_echo_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tx, ty;
tx=ds_queue_head(d_x);
ty=ds_queue_head(d_y);

var k=instance_create(tx,ty,obj_charge);
k.image_blend=c_purple; k.image_alpha=0.8;
k.get_xscale=0.1; k.get_yscale=0.1;
k.ktime=3;


enable=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_player) {
    ds_queue_enqueue(d_x,Me.x);
    ds_queue_enqueue(d_y,Me.y);
    ds_queue_enqueue(d_s,Me.sprite_index);
    ds_queue_enqueue(d_i,Me.image_index);
    ds_queue_enqueue(d_xs,obj_player.xScale);
    ds_queue_enqueue(d_ys,Me.image_yscale);
}

if ds_queue_empty(d_x) {
    if enable instance_destroy();
} else {
    lastx=ds_queue_head(d_x);
    lasty=ds_queue_head(d_y);
}

if enable &amp;&amp; collision_point(lastx,lasty,obj_player,1,0) scp_kill();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !ds_queue_empty(d_x) &amp;&amp; enable {
    var tx, ty, ts, ti, txs, tys;
    tx=ds_queue_dequeue(d_x);
    ty=ds_queue_dequeue(d_y);
    ts=ds_queue_dequeue(d_s);
    ti=ds_queue_dequeue(d_i);
    txs=ds_queue_dequeue(d_xs);
    tys=ds_queue_dequeue(d_ys);
    
    if ts==spr_PlayerFall ts=spr_cursefall;
    else if ts==spr_PlayerRunning ts=spr_curserun;
    else if ts==spr_PlayerJump ts=spr_cursejump;
    else if ts==spr_PlayerIdle ts=spr_curseplayer;
    
    draw_sprite_ext(ts,ti,tx,ty,txs,tys,0,c_white,random_range(0.7,1));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
