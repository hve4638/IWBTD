<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PlayerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprMaskPlayer</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set
MAXHP=100;
HP=100;
ARMOR=1;
onhealth=true;
drawhp=0;
hmove = 0;

onslide = false;
onlook = false;

image_speed=0;

inv=false;
phase=0;

surface = surface_create(32,32);
surface1 = surface_create(32,32);
surface2 = surface_create(32,32);
I = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///kid set
image_speed = 0.2;

frozen = false;
jump = 8.5;
jump2 = 7;
jumpw = 8; 
djump = 1;
hp_alp=1;

deffect = 0; //1 : hjump(x), 2 : vjump (y)
cSpeed = 1; //hmore effect

hjump_spd=1;
hjump_break=0;
hjump_dir=0;


inwater=place_meeting(x,y,obj_water);
G=0;

hmore_reb=0;
hmore_time=0;

white=0;
gravity = 0.4; 
adgrav=0;
adhspd=0;
setgrav=-1;

maxSpeed = 3; 
maxVspeed = 9;
maxVspeed2 = 9;
image_speed = 0.4;
onPlatform = 0; 
onBlock = 0; 
xScale = 1; 
del=0; onVine=0;

reb_h=0;
reb_v=0;

scp_publicsave();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
h = hmove;
if (h != 0) {
    hspeed = maxSpeed * h * hjump_spd;
    if onslide
        sprite_index = spr_PlayerSlide;
    else
        sprite_index = spr_PlayerRunning;
    image_speed = 0.5;
} else {
    hspeed = 0;
    sprite_index = spr_PlayerIdle;
    image_speed = 0.2;
}

if (vspeed &lt; -0.05) {
    sprite_index = spr_PlayerJump;
}
if (vspeed &gt; 0.05) {
    sprite_index = spr_PlayerFall;
    image_speed = 0.2;
}
if (vspeed &gt; maxVspeed) {vspeed = maxVspeed;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Modify
if onlook
{
    var _i = sign(Me.x - x);
    if _i!=0
        image_xscale = _i;
}

if onslide
{
    if 0&lt;hjump_spd
        hjump_spd=max(hjump_spd-0.2,0);
    else 
    {
        onslide = false;
        hjump_spd = 1;
        hmove = 0;
    }
}
else
{
    hmove = 0;
    hjump_spd=clamp(hjump_spd-0.5,1,5);
}


I++;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
if cheat
{
    if keyboard_check_pressed(ord('1'))
        scp_timeline(tin_bossd1);
    if keyboard_check_pressed(ord('2'))
        scp_timeline(tin_bossd2);
    if keyboard_check_pressed(ord('3'))
        scp_timeline(tin_bossd3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hit
if onhealth &amp;&amp; !inv {
    audio_play_sound(snd_BossHit,0,0);
    with(other) {instance_destroy();}
    HP-=DEAL*ARMOR;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with platforms
if (y-vspeed/2 &lt;= other.y){
  if(other.vspeed &gt;= 0){
    y = other.y-9;
    vspeed = other.vspeed;
    djump = true;
  }
  onPlatform = 1;
  djump = true;
}

cSpeed=1;
deffect=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic collision with blocks
if(!place_free(x+hspeed,y))
{
    if(hspeed &lt;= 0){move_contact_solid(180,abs(hspeed));}
    if(hspeed &gt; 0){move_contact_solid(0,abs(hspeed));}
    hspeed = 0;
}

if(!place_free(x,y+vspeed))
{
    if(vspeed &lt;= 0){move_contact_solid(90,abs(vspeed));}
    if(vspeed &gt; 0){move_contact_solid(270,abs(vspeed)); djump=1; cSpeed=1; deffect=0;}
    vspeed = 0;
}

if (!place_free(x+hspeed,y+vspeed)) {hspeed=0;}

onBlock=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Health
if onhealth {
    var vx, vy;
    vx=view_xview;
    vy=view_yview;
    
    if HP!=drawhp {
     if abs(drawhp-HP)&lt;0.5 {drawhp=HP;}
     drawhp+=(HP-drawhp)/10;
    }
    
    _p=739*(drawhp/MAXHP);
    draw_sprite_ext(spr_bar,0,vx+30,vy+32,1,1,0,c_white,1);
    draw_sprite_part_ext(spr_bar,5,0,0,_p,16,vx+30,vy+32,1,1,c_white,1);
    draw_sprite_ext(spr_bar,1,vx+30,vy+32,1,1,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(surface) surface_free(surface);
if surface_exists(surface1) surface_free(surface1);
if surface_exists(surface2) surface_free(surface2);
    
surface = surface_create(32,32);
surface2 = surface_create(32,32);
surface1 = surface_create(32,32);

surface_set_target(surface1);
draw_clear(c_white);
shader_set(sh_black);
draw_sprite_ext(sprite_index,image_index,abs(sprite_xoffset),abs(sprite_yoffset),image_xscale,image_yscale,image_angle,c_white,image_alpha);
shader_reset();
surface_reset_target();

surface_set_target(surface2);
shader_set(sh_removeblack);
draw_surface(surface1,0,0);
shader_reset();
surface_reset_target();

surface_set_target(surface);
draw_sprite_ext(spr_dimensionaura,I*0.3,0,0,1,1,0,c_white,1.0);
shader_set(sh_white);
draw_surface(surface2,0,0);
shader_reset();
surface_reset_target();

draw_self();
draw_set_alpha(0.8);
shader_set(sh_removewhite);
draw_surface(surface,x-abs(sprite_xoffset),y-abs(sprite_yoffset));
shader_reset();
draw_set_alpha(1.0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
