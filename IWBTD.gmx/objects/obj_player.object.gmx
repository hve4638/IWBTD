<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PlayerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>obj_fakeplayer</parentName>
  <maskName>sprMaskPlayer</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set
frozen = false;
jump = 8.5;
jump2 = 7;
jumpw = 8; 
djump = 1;
hp_alp=1;

deffect = 0; //1 : hjump(x), 2 : vjump (y)
cSpeed = 1; //hmore effect

hjump_spd=1;
hjump_break=0;
hjump_dir=0;


inwater=place_meeting(x,y,obj_water);
G=0;

hmore_reb=0;
hmore_time=0;

white=0;
gravity = 0.4; 
adgrav=0;
adhspd=0;
setgrav=-1;

maxSpeed = 3; 
maxVspeed = 9;
maxVspeed2 = 9;
image_speed = 0.4;
onPlatform = 0; 
onBlock = 0; 
xScale = 1; 
del=0; onVine=0;

firstinput=0;

tpon=0;
tpidx=0;
tpalpha=0;

FLIP=0;

if room==rmteleport VVV=true;
else VVV=false;

reb_h=0;
reb_v=0;

toc=false;
tox=0; toy=0;

scp_publicsave();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set2
DANMAKU=false;

INDEX=noone;
INDEX_SPEED=0.2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
debug_reb=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_fakeplayer);
scp_publicsave();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if 0&lt;kid_inv hp_alp=1;

if white {
    image_blend=c_white;
switch(sprite_index)
{
    case spr_PlayerIdle:
        sprite_index=spr_PlayerIdle_white;
    break;
    case spr_PlayerRunning:
        sprite_index=spr_PlayerRunning_white;
    break;
    case spr_PlayerJump:
        sprite_index=spr_PlayerJump_white;
    break;
    case spr_PlayerFall:
        sprite_index=spr_PlayerFall_white;
    break;   
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lighting
if room!=rmstage05e &amp;&amp; room!=rmboss05 &amp;&amp; room!=rmending7 &amp;&amp; room!=rmsin2 scp_light(x,y,96+16);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Water
if place_meeting(x,y,obj_water) {
    if !inwater &amp;&amp; room!=rmboss05 {
        if (!FLIP &amp;&amp; vspeed &gt;= 1.8) || (FLIP &amp;&amp; vspeed &lt;= -1.8) {
            with(sys_part) {
                if ++prt[39]==0 event_user(0);
                part_emitter_region(Sys[39],emitter[39],other.x+11,other.x-11,other.y+8,other.y-8,1,1);
                part_emitter_burst(Sys[39],emitter[39],particle[39],6);
            }
        }
    }
    inwater=true;
} else inwater=false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particle
if guy &amp;&amp; room!=rmlastboss {
    if G++ mod 5 == 0
    with(sys_part) {
        if ++prt[40]==0 event_user(0);
        
        part_system_depth(Sys[40],other.depth-1);
        part_type_direction(particle[40],60+view_angle,120+view_angle,0,0);
        part_type_gravity(particle[40],0.12,90+view_angle);
        if !other.FLIP part_emitter_region(Sys[40],emitter[40],other.x+13,other.x-13,other.y+5,other.y+7,1,0);
        else part_emitter_region(Sys[40],emitter[40],other.x+13,other.x-13,other.y-5,other.y-7,1,0);
        part_emitter_burst(Sys[40],emitter[40],particle[40],1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision playerKiller
if !DANMAKU {
    if place_meeting(round(x),round(y),playerKiller) scp_kill();
} else {
    if collision_point(x,y,playerKiller,1,0) scp_kill();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement and Controls (No Flip)
if FLIP==0 begin
    var L,R,h;
    L = keyboard_check_direct(global.leftbutton);
    R = keyboard_check_direct(global.rightbutton);
    if firstinput!=0 {
        if L &amp;&amp; R {
            if firstinput==1 L=0;
            else if firstinput==-1 R=0;
        }
        else if R firstinput=1;
        else if L firstinput=-1;
        else firstinput=0;
    }
    if firstinput==0 {
        if R firstinput=1;
        else if L firstinput=-1;
    }
    
    h = R;
    if (h == 0) h = -L;
    
    if (frozen == true) h = 0;

    if (h != 0) {
        hspeed = maxSpeed * h * hjump_spd;// cSpeed;
        xScale = h;
        
        sprite_index = spr_PlayerRunning;
        image_speed = 0.5;
    } else {
        hspeed = 0;
        sprite_index = spr_PlayerIdle;
        image_speed = 0.2;
    }
    
    
    if (!onPlatform) {
        if (vspeed &lt; -0.05) {
            sprite_index = spr_PlayerJump;
        }
        if (vspeed &gt; 0.05) {
            sprite_index = spr_PlayerFall;
            image_speed = 0.2;
        }
    } else { 
        if (place_meeting(x,y+4,obj_platform) == false) {
            onPlatform = 0;
        }
    }
    
    if (vspeed &gt; maxVspeed) {vspeed = maxVspeed;}
end
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement and Controls (Flip)
if FLIP==1 begin
    var L,R,h;
    
    R = keyboard_check_direct(global.leftbutton);
    L = keyboard_check_direct(global.rightbutton);
    //L-R Swap
    if firstinput!=0 {
        if L &amp;&amp; R {
            if firstinput==1 L=0;
            else if firstinput==-1 R=0;
        }
        else if R firstinput=1;
        else if L firstinput=-1;
        else firstinput=0;
    }
    if firstinput==0 {
        if R firstinput=1;
        else if L firstinput=-1;
    }
    
    h = R;
    if (h == 0) h = -L;
    
    if (frozen == true) h = 0;
    
    if (h != 0) {
        hspeed = maxSpeed * h * cSpeed;
        xScale = h;
        sprite_index = spr_PlayerRunning;
        image_speed = 0.5;
    } else {
        hspeed = 0;
        sprite_index = spr_PlayerIdle;
        image_speed = 0.2;
    }
    
    if (!onPlatform) {
        if (vspeed &gt; 0.05) {
            sprite_index = spr_PlayerJump;
        }
        if (vspeed &lt; -0.05) {
            sprite_index = spr_PlayerFall;
            image_speed = 0.2;
        }
    } else { 
        if (place_meeting(x,y-4,obj_platform) == false) {
            onPlatform = 0;
        }
    }

    if (vspeed &lt; -maxVspeed) {vspeed = -maxVspeed;}
end
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Action
if (!frozen) {
    if (keyboard_check(global.shotbutton)) {
        if del&lt;=0 &amp;&amp; kid_inv&lt;=0 {scp_shoot(); del=7;}
    }

    if (keyboard_check_pressed(global.jumpbutton)) {
        if !onVine {
            if !FLIP scp_jump();
            else scp_jump_flip();
        }
    }

    if djump!=-1 &amp;&amp; (keyboard_check_released(global.jumpbutton)) {
        if !FLIP scp_vjump();
        else scp_vjump_flip();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///New Vinejumps (No Flip)
if FLIP==0 begin
    var L, R, J;
    L = keyboard_check_pressed(global.leftbutton);
    R = keyboard_check_pressed(global.rightbutton);
    J = keyboard_check_direct(jumpbutton);
    
    onVine=false;
    if (distance_to_object(obj_walljumpL)&lt;2 || place_meeting(x-2,y,obj_ivy)) &amp;&amp; place_free(x,y+1) {
        onVine=true;
        
        sprite_index=spr_PlayerSliding;
        image_speed=0.5;
        xScale=1;
        
        if R &amp;&amp; J {
            sprite_index=spr_PlayerJump;
            vspeed = -9;
            reb_h = 6;
            
            scp_sfx(snd_WallJump,1);
        }
        
        if R &amp;&amp; !J {
            sprite_index=spr_PlayerFall;
            reb_h = 3;
            
            onVine=false;
        }
    }
    else if (distance_to_object(obj_walljumpR)&lt;2 || place_meeting(x+2,y,obj_ivy)) &amp;&amp; place_free(x,y+1) {
        onVine=true;
        sprite_index=spr_PlayerSliding;
        image_speed=0.5;
        xScale=-1;
        
        if L &amp;&amp; J {
            sprite_index=spr_PlayerJump;
            vspeed = -9;
            reb_h = -6;
            
            scp_sfx(snd_WallJump,1);
        }
        
        if L &amp;&amp; !J {
            sprite_index=spr_PlayerFall;
            reb_h = -3;
            
            onVine=false;
        }
    }
    
    if onVine {
        maxFallSpeed=2;
        if maxFallSpeed&lt;vspeed vspeed=maxFallSpeed;
        if vspeed&lt;0 vspeed*=0.85;
    } else maxFallSpeed=8;
end
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///New Vinejumps (Flip)
if FLIP==1 begin
    var L, R, J;
    R = keyboard_check_pressed(global.leftbutton);
    L = keyboard_check_pressed(global.rightbutton);
    J = keyboard_check_direct(jumpbutton);
    
    onVine=false;
    if (distance_to_object(obj_walljumpL)&lt;2 || place_meeting(x-2,y,obj_ivy)) &amp;&amp; place_free(x,y+1) {
        onVine=true;
        
        sprite_index=spr_PlayerSliding;
        image_speed=0.5;
        xScale=1;
        
        if R &amp;&amp; J {
            sprite_index=spr_PlayerJump;
            vspeed = 9;
            reb_h = 6;
            
            scp_sfx(snd_WallJump,1);
        }
        
        if R &amp;&amp; !J {
            sprite_index=spr_PlayerFall;
            reb_h = 3;
            
            onVine=false;
        }
    }
    else if (distance_to_object(obj_walljumpR)&lt;2 || place_meeting(x+2,y,obj_ivy)) &amp;&amp; place_free(x,y+1) {
        onVine=true;
        sprite_index=spr_PlayerSliding;
        image_speed=0.5;
        xScale=-1;
        
        if L &amp;&amp; J {
            sprite_index=spr_PlayerJump;
            vspeed = 9;
            reb_h = -6;
            
            scp_sfx(snd_WallJump,1);
        }
        
        if L &amp;&amp; !J {
            sprite_index=spr_PlayerFall;
            reb_h = -3;
            
            onVine=false;
        }
    }
    
    if onVine {
        maxFallSpeed=-2;
        if maxFallSpeed&gt;vspeed vspeed=maxFallSpeed;
        if vspeed&gt;0 vspeed*=0.85;
    } else maxFallSpeed=-8;
end
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add spd
if FLIP==0 gravity = 0.4;
else if FLIP==1 gravity = -0.4;

if reb_v!=0 {
    vspeed+=reb_v;
    reb_v=sign(reb_v)*(abs(reb_v)-1);
}

if reb_h!=0 {
    hspeed+=reb_h;
    
    debug_reb+=reb_h;
    if place_free(x+hspeed,y) {
        if reb_h&lt;0 reb_h++;
        else if reb_h&gt;0 reb_h--;
    }
    else {reb_h=0; hspeed=0;}
}

if onBlock debug_reb=0;
gravity+=adgrav;
adgrav=0;

hspeed+=adhspd;
adhspd=0;

if 0&lt;=setgrav {
    gravity=setgrav;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set &amp; Modify
if persistent==1 {persistent=0;}
if INDEX!=noone {sprite_index=INDEX; image_speed=INDEX_SPEED;}

if 0&lt;del {del-=1;}

if FLIP==0 image_yscale=1;
else if FLIP==1 image_yscale=-1;

if toc {
    x=tox; y=toy;
    toc=false;
    with(sys_cam) {
        if type=0 { //follow-target cam
            rx=target.x;
            ry=target.y;
        }
        
        else if type=1 { //room-cut cam 
            rx=floor(target.x/mx)*mx; ry=floor(target.y/my)*my;
        }
    
        else if type=2 { //follow-roomcut cam
            rx=floor(target.x/mx)*mx; ry=floor(target.y/my)*my;
        }
        
        event_user(0);
        x=clamp(rx+sx,xmin,xmax)+400;
        y=clamp(ry+sy,ymin,ymax)+304;
    }
}


onBlock=!place_free(x,y+vspeed);
cSpeed=clamp(cSpeed-0.1,1,5);

//hmore
/*if !hjump_break {
    if hjump_dir==0 {
        hjump_dir=firstinput;
    } else if firstinput!=0 {
        if hjump_dir!=firstinput hjump_break=true;
    }
}*/

hjump_spd=clamp(hjump_spd-0.1,1,5);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Goto tproom
if cantp &amp;&amp; !frozen begin

var TP=ord('T');
if keyboard_check_pressed(TP) &amp;&amp; tpalpha==0 {
    tpon=true;
} else if !keyboard_check_direct(TP) {tpon=false;}

if tpon {
    if tpalpha&lt;1 tpalpha+=0.1;
    else {
        if tpidx&lt;30 tpidx++;
        else {
            tpon=false;
            tpidx=1000;
            var i=instance_create(x-16,y-16,obj_tp);
            with(i) {
                ROOM=rmteleport;
                gotox=672;
                gotoy=368;
                sleep=5;
            }
        }
    }
} else {
    tpalpha=max(tpalpha-0.1,0);
    tpidx=max(tpidx-4,0);
}

end
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vvvvvv
if VVV {
    if x&lt;=0 reb_h=12;
    else if x&gt;=room_width reb_h=-12;
    
    if y&lt;=0 y+=room_height;
    else if y&gt;=room_height y-=room_height;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vinejumps (No Flip) UNUSED
/*
if FLIP==0 begin
    onVine=0;
    if distance_to_object(obj_walljumpL) &lt; 2 &amp;&amp; place_free(x,y+1) 
    {
        onVine=1;
        vspeed=2;
        maxFallSpeed=2;
        sprite_index=spr_PlayerSliding;
        xScale=1
        image_speed=1/2;
        if keyboard_check_pressed(rightbutton) &amp;&amp; keyboard_check(jumpbutton) {
            sprite_index=spr_PlayerJump;
            vspeed = -9;
            hspeed = 15;
            audio_play_sound(snd_WallJump,0,0);
        }
        
        if keyboard_check_pressed(rightbutton) &amp;&amp; !keyboard_check(jumpbutton) {
            hspeed=3
            maxFallSpeed=8
            sprite_index=spr_PlayerFall;
        }
    
    }
    
    if distance_to_object(obj_walljumpR) &lt; 2 &amp;&amp; place_free(x,y+1) {
        onVine=1;
        vspeed=2;
        maxFallSpeed=2;
        sprite_index=spr_PlayerSliding;
        xScale=-1
        image_speed=1/2;
    
        if keyboard_check_pressed(leftbutton) &amp;&amp; keyboard_check(jumpbutton) {
            sprite_index=spr_PlayerJump;
            vspeed = -9;
            hspeed = -15;
            audio_play_sound(snd_WallJump,0,0);
        }
        
        if keyboard_check_pressed(leftbutton) &amp;&amp; !keyboard_check(jumpbutton) {
            hspeed=-3
            maxFallSpeed=8
            sprite_index=spr_PlayerFall;
        }
    }
    
    
    
    
    
    
    
    
    if place_meeting(x-2,y,obj_ivy) &amp;&amp; place_free(x,y+1) 
    {
        onVine=1;
        vspeed=2;
        maxFallSpeed=2;
        sprite_index=spr_PlayerSliding;
        xScale=1
        image_speed=1/2;
        if keyboard_check_pressed(rightbutton) &amp;&amp; keyboard_check(jumpbutton) {
            sprite_index=spr_PlayerJump;
            vspeed = -9;
            hspeed = 15;
            audio_play_sound(snd_WallJump,0,0);
        }
        
        if keyboard_check_pressed(rightbutton) &amp;&amp; !keyboard_check(jumpbutton) {
            hspeed=3
            maxFallSpeed=8
            sprite_index=spr_PlayerFall;
        }
    
    } else if place_meeting(x+2,y,obj_ivy)  &amp;&amp; place_free(x,y+1) {
        onVine=1;
        vspeed=2;
        maxFallSpeed=2;
        sprite_index=spr_PlayerSliding;
        xScale=-1
        image_speed=1/2;
    
        if keyboard_check_pressed(leftbutton) &amp;&amp; keyboard_check(jumpbutton) {
            sprite_index=spr_PlayerJump;
            vspeed = -9;
            hspeed = -15;
            audio_play_sound(snd_WallJump,0,0);
        }
        
        if keyboard_check_pressed(leftbutton) &amp;&amp; !keyboard_check(jumpbutton) {
            hspeed=-3
            maxFallSpeed=8
            sprite_index=spr_PlayerFall;
        }
    }
end
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vinejumps (Flip) UNUSED
/*
if FLIP==1 begin
    var R, L;
    L=keyboard_check_pressed(rightbutton);
    R=keyboard_check_pressed(leftbutton);
    onVine=0;
    if distance_to_object(obj_walljumpL) &lt; 2 &amp;&amp; place_free(x,y-1) 
    {
        onVine=1;
        vspeed=-2;
        maxFallSpeed=-2;
        sprite_index=spr_PlayerSliding;
        xScale=1
        image_speed=1/2;
        if R &amp;&amp; keyboard_check(jumpbutton) {
            sprite_index=spr_PlayerJump;
            vspeed = 9;
            hspeed = 15;
            audio_play_sound(snd_WallJump,0,0);
        }
        
        if R &amp;&amp; !keyboard_check(jumpbutton) {
            hspeed=-3
            maxFallSpeed=-8
            sprite_index=spr_PlayerFall;
        }
    
    }
    
    if distance_to_object(obj_walljumpR) &lt; 2 &amp;&amp; place_free(x,y-1) {
        onVine=1;
        vspeed=-2;
        maxFallSpeed=-2;
        sprite_index=spr_PlayerSliding;
        xScale=-1
        image_speed=1/2;
    
        if L &amp;&amp; keyboard_check(jumpbutton) {
            sprite_index=spr_PlayerJump;
            vspeed = 9;
            hspeed = -15;
            audio_play_sound(snd_WallJump,0,0);
        }
        
        if L &amp;&amp; !keyboard_check(jumpbutton) {
            hspeed=3
            maxFallSpeed=-8
            sprite_index=spr_PlayerFall;
        }
    }
    
    
    
    
    
    
    
    
    if place_meeting(x-2,y,obj_ivy) &amp;&amp; place_free(x,y-1) 
    {
        onVine=1;
        vspeed=-2;
        maxFallSpeed=-2;
        sprite_index=spr_PlayerSliding;
        xScale=1
        image_speed=1/2;
        if R &amp;&amp; keyboard_check(jumpbutton) {
            sprite_index=spr_PlayerJump;
            vspeed = 9;
            hspeed = 15;
            audio_play_sound(snd_WallJump,0,0);
        }
        
        if R &amp;&amp; !keyboard_check(jumpbutton) {
            hspeed=3
            maxFallSpeed=-8
            sprite_index=spr_PlayerFall;
        }
    
    } else if place_meeting(x+2,y,obj_ivy)  &amp;&amp; place_free(x,y-1) {
        onVine=1;
        vspeed=-2;
        maxFallSpeed=-2;
        sprite_index=spr_PlayerSliding;
        xScale=-1
        image_speed=1/2;
    
        if L &amp;&amp; keyboard_check(jumpbutton) {
            sprite_index=spr_PlayerJump;
            vspeed = 9;
            hspeed = -15;
            audio_play_sound(snd_WallJump,0,0);
        }
        
        if L &amp;&amp; !keyboard_check(jumpbutton) {
            hspeed=-3
            maxFallSpeed=-8
            sprite_index=spr_PlayerFall;
        }
    }
end
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_water">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !FLIP &amp;&amp; vspeed &gt; 2 {vspeed = 2;}
else if FLIP &amp;&amp; vspeed &lt; -2 {vspeed = -2;}
//djump = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_gravity_right">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other) {
    other.adhspd=hspd;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_gravity_more">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other) {
    other.adgrav=grav;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_more">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.alarm[0]==-1 &amp;&amp; 0.5&lt;other.image_alpha {
    other.alarm[0]=60;
    djump=true;
    if other.object_index == obj_hmore {deffect=1;}
    else if other.object_index == obj_vmore {deffect=2; other.alarm[0]=120;}
    else deffect=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with platforms
if other.On {
    if !FLIP {
        if (y-vspeed/2 &lt;= other.y){
          if(other.vspeed &gt;= 0){
            y = other.y-9;
            vspeed = other.vspeed;
            djump = true;
          }
          onPlatform = 1;
          djump = true;
        }
    }
}

cSpeed=1;
deffect=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic collision with blocks
if(!place_free(x+hspeed,y))
{
    if(hspeed &lt;= 0){move_contact_solid(180,abs(hspeed));}
    if(hspeed &gt; 0){move_contact_solid(0,abs(hspeed));}
    hspeed = 0;
}

if FLIP==0 {
    if(!place_free(x,y+vspeed))
    {
        if(vspeed &lt;= 0){move_contact_solid(90,abs(vspeed));}
        if(vspeed &gt; 0){move_contact_solid(270,abs(vspeed)); djump=1; cSpeed=1; deffect=0;}
        vspeed = 0;
    }
} else if FLIP==1 {
    if(!place_free(x,y+vspeed))
    {
        if(vspeed &lt; 0){move_contact_solid(90,abs(vspeed)); djump=1; cSpeed=1; deffect=0;}
        if(vspeed &gt;= 0){move_contact_solid(270,abs(vspeed));}
        vspeed = 0;
    }
}

if (!place_free(x+hspeed,y+vspeed)) {hspeed=0;}

onBlock=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_teleport">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if x&lt;0 || x&gt;room_width || y&lt;0|| y&gt;room_height {
    with(other) {event_user(0);}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room==rmteleport VVV=true;
else VVV=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !VVV &amp;&amp; !place_meeting(x,y,obj_teleport) {
    kid_hp=0; kid_inv=0;
    scp_kill();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vismask {draw_sprite_ext(sprMaskPlayer,0,floor(x),floor(y),xScale,image_yscale,image_angle,c_white,0.7)}
if kid_hp&lt;kid_mxhp {
    var i;
    draw_set_alpha(hp_alp);
    for(i=0;i&lt;kid_hp;i++) draw_sprite(spr_health,0,x+(i-floor(kid_mxhp/2))*14,y-19);
    for(i=kid_hp;i&lt;kid_mxhp;i++) draw_sprite(spr_health,1,x+(i-floor(kid_mxhp/2))*14,y-19);
    draw_set_alpha(1);
}

if 0&lt;tpalpha {
    if 30&lt;tpidx draw_sprite_ext(spr_loading,1,floor(x),floor(y),1,1,0,c_white,tpalpha);
    else {
        var i;
        draw_sprite_ext(spr_loading,0,floor(x),floor(y),1,1,0,c_white,tpalpha);
        texture_set_interpolation(false);
        for(i=0;i&lt;=tpidx;i++) {
            draw_sprite_ext(spr_loading,3,floor(x),floor(y),1,1,i/30*360,c_white,tpalpha);
        }
        texture_set_interpolation(true);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if 0&lt;kid_inv image_alpha=0.7;
else image_alpha=1;
draw_sprite_ext(sprite_index,image_index,floor(x),floor(y),xScale,image_yscale,image_angle,image_blend,image_alpha);

if DANMAKU draw_sprite(spr_point,0,x,y);
if wuss draw_sprite_ext(spr_ribbon,0,floor(x),floor(y),xScale,image_yscale,0,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
