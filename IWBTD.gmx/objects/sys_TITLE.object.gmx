<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_TITLE</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha=0;
to_alpha=0.9;
I=0;

ON=0;
select[0]=0;
select[1]=0;
select[2]=0;
select[3]=0;
setselect=0;
setconfig=0;

ds_tmp=ds_list_create();
ds_tmp2=ds_map_create();

scp_localload();
scp_publicload();
for(i=1;i&lt;=3;i++) {
    ds_map_clear(ds_tmp2);
    ds_map_read(ds_tmp2,sys_global.ldata[i]);
    if scp_issave_correct(ds_tmp2) {
        issave[i]=true;

        if ds_tmp2[? "wuss"] s_dif[i]=1;
        else s_dif[i]=0;
        //show_message("n" + string(i));
        s_room[i]=asset_get_index(ds_tmp2[? "room"]);
        
        
        ds_list_clear(ds_tmp);
        ds_list_read(ds_tmp,sys_global.pdata[i]);
        s_time[i]=real(ds_list_find_value(ds_tmp,0));
        s_death[i]=real(ds_list_find_value(ds_tmp,1));
    } else {
        issave[i]=false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particle
Sys= part_system_create();
particle = part_type_create();
part_type_shape(particle,pt_shape_flare);
part_type_size(particle,0.10,0.10,0.01,0);
part_type_scale(particle,4,4);
part_type_color1(particle,5263440);
part_type_alpha3(particle,0.10,0.01,0);
part_type_speed(particle,0.3,1,0,0);
part_type_direction(particle,45,135,0,0);
part_type_gravity(particle,0,270);
part_type_orientation(particle,0,0,0,0,1);
part_type_blend(particle,0);
part_type_life(particle,30,300);
emitter = part_emitter_create(Sys);

part_emitter_region(Sys,emitter,0,800,606,610,0,0);
part_emitter_stream(Sys,emitter,particle,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(ds_tmp);
ds_map_destroy(ds_tmp2);
part_system_destroy(Sys);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set
if ON &amp;&amp; !setconfig {
    var i=keyboard_check_pressed(vk_down)-keyboard_check_pressed(vk_up);
    select[setselect]+=i;
    
    if setselect==0 {
        select[0]=clamp(select[0],0,2);
    } else if setselect==1 {
        if select[0]==0 select[1]=clamp(select[1],0,3);
        else if select[0]==1 select[1]=clamp(select[1],0,3);
        if i!=0 &amp;&amp; 0&lt;=select[1] &amp;&amp; select[1]&lt;=2 {num=select[1]+1;}
    } else if setselect==2 {
        if select[0]==0 {
            if 0&lt;=select[1] &amp;&amp; select[1]&lt;=2 {
                if issave[num] select[2]=clamp(select[2],0,2);
                else select[2]=clamp(select[2],0,1);
            }
        }
        else if select[0]==1 {
            if select[1]==1 select[2]=clamp(select[2],0,7);
        }
    }
    else if setselect==3 {
        select[3]=clamp(select[3],0,2);
    }
    
    if keyboard_check_pressed(vk_enter) {
        if setselect==0 {
            if select[0]==0 {setselect=1; num=1;}
            else if select[0]==1 setselect=1;
            else if select[0]==2 game_end();
        }
        else if setselect==1 {
            if select[0]==0 {
                if 0&lt;=select[1] &amp;&amp; select[1]&lt;=2 setselect=2;
                else if select[1]==3 {setselect=0; select[1]=0;}
            }
            else if select[0]==1 {
                if select[1]==0 bgmset=!bgmset;
                else if select[1]==1 setselect=2;
                else if select[1]==2 &amp;&amp; isclear cheat=!cheat;
                else if select[1]==3 {setselect=0; select[1]=0; scp_configsave();}
            }
        }
        else if setselect==2 {
            if select[0]==0 {
                if 0&lt;=select[1] &amp;&amp; select[1]&lt;=2 {
                    if select[2]==0 { //game start
                        if issave[num] { //LOAD GAME
                            persistent=1; cansave=true;
                            scp_publicload();
                            scp_load();
                            instance_destroy();
                        } else { //NEW GAME
                            setselect=3;
                            wuss=0;
                        }
                        
                    }
                    if issave[num] {
                        if select[2]==1 {setselect=3;}
                        else  if select[2]==2 {setselect=1; select[2]=0;}
                    } else {
                        if select[2]==1 {setselect=1; select[2]=0;}
                    }
                    
                }
            }
            else if select[0]==1 {
                if select[1]==1 {
                    if 0&lt;=select[2] &amp;&amp; select[2]&lt;=6 setconfig=select[2]+1;
                    else if select[2]==7 {setselect=1; select[2]=0; scp_configsave();}
                }
            }
        }
        else if setselect==3 {
            if select[0]==0 {
                if 0&lt;=select[1] &amp;&amp; select[1]&lt;=2 {
                    if select[2]==1 &amp;&amp; issave[num] {
                        if select[3]==0 s_dif[num]=!s_dif[num]; //difficult
                        else if select[3]==1 { //delete
                            if show_question('Are you sure?') {
                                issave[num]=false;
                                
                                setselect=1;
                                select[2]=0;
                                select[3]=0;
                            }
                        }
                        else if select[3]==2 { //back
                            ds_map_clear(ds_tmp2);
                            ds_map_read(ds_tmp2,sys_global.ldata[num]);
                            ds_tmp2[? "wuss"] = s_dif[num];
                            sys_global.ldata[num]=ds_map_write(ds_tmp2);
                            scp_localsave();
                            
                            setselect=2;
                            select[3]=0;
                        }
                    }
                    else if select[2]==0 &amp;&amp; !issave[num] {
                        if select[3]==0 { //start
                            persistent=1; cansave=true;
                            scp_publicload();
                            scp_save(96+16,480+16,rmstage01a);
                            room_goto(rmstage01a);
                            time=0; death=0;
                            instance_destroy();
                        }
                        else if select[3]==1 wuss=!wuss;
                        else if select[3]==2 { //back
                            setselect=2;
                            select[3]=0;
                        }
                    }
                }
            }
        }
    }
}
else if 0&lt;setconfig {
    if keyboard_check_pressed(vk_anykey) {
        if setconfig=1 {upbutton=keyboard_key;}
        else if setconfig=2 {downbutton=keyboard_key;}
        else if setconfig=3 {leftbutton=keyboard_key;}
        else if setconfig=4 {rightbutton=keyboard_key;}
        else if setconfig=5 {jumpbutton=keyboard_key;}
        else if setconfig=6 {shotbutton=keyboard_key;}
        else if setconfig=7 {restartbutton=keyboard_key;}
        setconfig=0; scp_configsave();
    }
}
else if !ON {
    if keyboard_check_pressed(vk_anykey) {
        if keyboard_key==vk_f12 {isclear=true;}
        ON=true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alpha
if I mod 5 == 0 {
    if ceil(to_alpha*100)==ceil(image_alpha*100) to_alpha=random_range(0.45,0.75);
    else image_alpha+=sign(to_alpha-image_alpha)*0.01;
}
I++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Title
draw_self();
draw_set_colour(c_white);
draw_set_font(Font0);
draw_set_halign(fa_center);
    
if ON {
    draw_set_font(Font2);
    draw_set_halign(fa_left);
    draw_text(0,0,es('title','explanation'));


    draw_set_font(Font0);
    draw_set_halign(fa_center);
    scp_alphaset(0,0); draw_text(384,384,es('main','play'));
    scp_alphaset(0,1); draw_text(384,384+32,es('main','option'));
    scp_alphaset(0,2); draw_text(384,384+64,es('main','exit'));
    
    if setselect&gt;=1 {
        if select[0]==0 {
            draw_set_halign(fa_middle);
            scp_alphaset(1,0); draw_text(490,312,es('main','save')+" 1");
            scp_alphaset(1,1); draw_text(490,312+32,es('main','save')+" 2");
            scp_alphaset(1,2); draw_text(490,312+64,es('main','save')+" 3");
            scp_alphaset(1,3); draw_text(490,312+96,es('main','back'));
            
            if 0&lt;=select[1] &amp;&amp; select[1]&lt;=2 &amp;&amp; issave[num] {
                draw_set_alpha(0.3);
                draw_set_halign(fa_middle);
                
                draw_set_font(Font0_nobold);
                draw_text(650,240,scp_roomname(s_room[num]));
                
                draw_set_font(Font0_12);
                draw_set_halign(fa_left);
                draw_text(580,240+32,'TIME : '+string(s_time[num]));
                draw_text(580,240+32+24,'DEATH : '+string(s_death[num]));
                
                draw_set_font(Font0);
            }
        }
        else if select[0]==1 {
            draw_set_halign(fa_left);
            var str1, str2, str2b;
            str1=es('main','bgm');
            str2=es('main','debug');
            str2b="";
            
            if setselect==1 {
                if select[1]==0 {
                    if bgmset str1+=' '+es('main','on');
                    else str1+=' '+es('main','off');
                }
                else if select[1]==2 {
                    if !isclear str2b='  '+es('main','debuglock');
                    else if cheat str2b=' '+es('main','on');
                    else str2b+=' '+es('main','off');
                }
            }
            
            
            scp_alphaset(1,0); draw_text(490-40,312,str1);
            scp_alphaset(1,1); draw_text(490-40,312+32,es('main','config'));
            scp_alphaset(1,2); draw_text(490-40,312+64,str2); 
            
            if isclear {draw_set_alpha(1);} else {draw_set_alpha(0.3);}
            draw_text(490-40+string_width(str2),312+64,str2b);
            scp_alphaset(1,3); draw_text(490-40,312+96,es('main','back'));
        }
    }
    if setselect==2 {
        if select[0]==0 {
            if 0&lt;=select[1] &amp;&amp; select[1]&lt;=2 {
                draw_set_halign(fa_left);
                if issave[num] {
                    scp_alphaset(2,0); draw_text(560,320+16,es('main','load'));
                    scp_alphaset(2,1); draw_text(563,320+32+16,es('main','setting'));
                    scp_alphaset(2,2); draw_text(563,320+64+16,es('main','back'));
                }
                else {
                    scp_alphaset(2,0); draw_text(560,320+16,es('main','new'));
                    scp_alphaset(2,1); draw_text(563,320+32+16,es('main','back'));
                }
                
            }
        }
        else if select[0]==1 {
            if select[1]==1 {
                draw_set_halign(fa_left);
                scp_alphaset(2,0); draw_text(560,320+32*-2,es('config','up'));
                scp_alphaset(2,1); draw_text(560,320+32*-1,es('config','down'));
                scp_alphaset(2,2); draw_text(560,320+32*0,es('config','left'));
                scp_alphaset(2,3); draw_text(560,320+32*1,es('config','right'));
                scp_alphaset(2,5); draw_text(560,320+32*3,es('config','shoot'));
                scp_alphaset(2,4); draw_text(560,320+32*2,es('config','jump'));
                scp_alphaset(2,6); draw_text(560,320+32*4,es('config','restart'));
                scp_alphaset(2,7); draw_text(560,320+32*5,es('main','back'));
                
                
                var tx=670; var ty=0;
                draw_set_font(Font0_nobold);
                if setconfig==0
                switch(select[2]) {
                    case 0: draw_text(tx,320+32*-2,scp_keyname(upbutton)); break;
                    case 1: draw_text(tx,320+32*-1,scp_keyname(downbutton)); break;
                    case 2: draw_text(tx,320,scp_keyname(leftbutton)); break;
                    case 3: draw_text(tx,320+32*1,scp_keyname(rightbutton)); break;
                    case 4: draw_text(tx,320+32*2,scp_keyname(jumpbutton)); break;
                    case 5: draw_text(tx,320+32*3,scp_keyname(shotbutton)); break;
                    case 6: draw_text(tx,320+32*4,scp_keyname(restartbutton)); break;
                }
                else {
                    switch(select[2]) {
                        case 0: ty=320+32*-2; break;
                        case 1: ty=320+32*-1; break;
                        case 2: ty=320; break;
                        case 3: ty=320+32*1; break;
                        case 4: ty=320+32*2; break;
                        case 5: ty=320+32*3; break;
                        case 6: ty=320+32*4; break;
                    }
                    draw_text(tx,ty,es('config','none'));
                }
                draw_set_font(Font0);
            }
        }
    }
    if setselect==3 {
        if select[0]==0 {
            if select[2]==1 &amp;&amp; issave[num] {
                var str;
                if s_dif[num] str=es('difficult','easy');
                else str=es('difficult','normal');
                draw_set_halign(fa_left);
                scp_alphaset(3,0); draw_text(560,320+16,es('main','difficult')+": "+str);
                scp_alphaset(3,1); draw_text(563,320+32+16,es('main','reset'));
                scp_alphaset(3,2); draw_text(563,320+64+16,es('main','back'));
            }
            else if select[2]==0 &amp;&amp; !issave[num] {
                var str;
                if wuss str=es('difficult','easy');
                else str=es('difficult','normal');
                draw_set_halign(fa_left);
                scp_alphaset(3,0); draw_text(563,320+16,es('main','start'));
                scp_alphaset(3,1); draw_text(562,320+32+16,es('main','difficult')+": "+str);
                scp_alphaset(3,2); draw_text(563,320+64+16,es('main','back'));
            }
        }
    }
}
else {
    draw_set_font(Font2);
    draw_set_halign(fa_left);
    draw_text(0,0,es('title','version'));
    
    draw_set_font(Font0);
    draw_set_halign(fa_center);
    draw_text(384,416,es('main','press'));
}


draw_set_alpha(1);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
