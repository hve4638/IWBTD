<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar time, death, num;
globalvar cansave, vismask, bgmset, cheat, perbgm, ontp, ongod, onui, uiset, isclear, cantp, showvar, DEAL;
globalvar upbutton, leftbutton, rightbutton, downbutton, shotbutton, jumpbutton, restartbutton, tpbutton;
globalvar wuss, guy;
globalvar kid_hp, kid_mxhp, kid_inv;
globalvar SWITCH;
globalvar boss;
globalvar prever;
T=0; time=0; death=0; num=1; ontp=0; ongod=0; ondeal=0; showvar=0;
cansave=0; vismask=0; bgmset=true;
wuss=false; guy=false;
kid_inv=0; kid_hp=1; kid_mxhp=1;
perver=-1; prever=-1;

towershader=false;
showkey=false;
SWITCH[0] = 0;

reroom=false;
reroom_idx=0;

tpbutton=ord('T');

perbgm=noone; cheat=0; DEAL=1;
tempdeal=1;

light_mouse=false;

isclear=false;

uiset=true;
cantp=false;

vname=''; vtime=0; valpha=0;

i=0; repeat(7) ki[i++]=0;
i=0; repeat(3) orb[i++]=0;
i=0; repeat(10) boss[i++]=0;
randomize();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save
tmplist=ds_list_create();
tmpmap=ds_map_create();

pdata[1]="";
pdata[2]="";
pdata[3]="";

ldata[1]="";
ldata[2]="";
ldata[3]="";

cdata="";

scp_configload();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Comment
/*

*** Depth ***
Unused: -1000
holysword(except): -15
particle: -15
player: -10
bosses: -10
throwing ball: -5
bullet: -5
block(tile): 0
spike: 5



Tip Font: Bookman Old Style
폰트 맑은고딕 18
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load Data
var t, f;
var sec, key, val;
var str, str1, str2;
sec='unknown';

txt=ds_map_create();


t="text.txt";
f=file_text_open_read(t);
while(!file_text_eof(f)) {
    str=file_text_read_string(f);

    if string_copy(str,1,1)=='&lt;' {
        str=string_replace(str,'&lt;','');
        str=string_replace(str,'&gt;','');
        sec=str;
    } else if string_copy(str,1,1)=='"' {        
        var i=string_pos('=',str);
        key=string_copy(str,1,i-1);
        val=string_delete(str,1,i);
        
        i=string_pos('"',key);
        key=string_delete(key,1,i);
        i=string_pos('"',key);
        key=string_copy(key,1,i-1);
        
        i=string_pos('"',val);
        val=string_delete(val,1,i);
        i=string_pos('"',val);
        val=string_copy(val,1,i-1);
        
               
        txt[? sec+'.'+key]=val;
    }
    file_text_readln(f);    
}
file_text_close(f);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=Init {
    room_goto(title);
}
if fps&lt;=++T {T=0; time+=1;}

if keyboard_check_pressed(vk_escape) {
    if room==title game_end();
    else game_restart();
}

if cansave &amp;&amp; keyboard_check_pressed(restartbutton) {
    if kid_hp&lt;kid_mxhp &amp;&amp; !instance_exists(obj_GAMEOVER) death+=1;
    scp_load(num);
}

if 0&lt;kid_inv kid_inv--;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///About Cheat
if cheat &amp;&amp; room!=title {
    if keyboard_check_pressed(vk_f3) {vismask=!vismask;}
    if keyboard_check_pressed(vk_f4) &amp;&amp; room!=title room_goto(test);
    if keyboard_check_pressed(vk_f5) {
        if ondeal {tempdeal=DEAL; DEAL=1;}
        else DEAL=tempdeal;
        ondeal=!ondeal;
    }
    if keyboard_check_pressed(vk_f7) {ontp=!ontp;}
    if keyboard_check_pressed(vk_f8) {ongod=!ongod;}
    if keyboard_check_pressed(vk_f9) {showvar=!showvar;}
    
    
    if keyboard_check_pressed(ord('S')) {
        if instance_exists(obj_player) {
            scp_save(obj_player.x,obj_player.y,room);
            instance_create(Me.x,Me.y-8,obj_savetxt);
        }
    }
    /*if keyboard_check_pressed(ord('P')) {
        var i;
        i=0; repeat(7) ki[i++]=0;
        i=0; repeat(3) orb[i++]=0;
    }*/
    
    
    if keyboard_check_pressed(ord('Q')) with(obj_player) scp_kill();
    if keyboard_check_pressed(ord('H')) kid_hp=kid_mxhp;
    if keyboard_check_pressed(ord('J')) {
        kid_mxhp=5; kid_hp=5;
        with(instance_create(Me.x,Me.y,obj_charge))
        {
            image_blend = c_red;
            image_xscale = -1;
            image_yscale = -1;
            get_xscale = 0.2;
            get_yscale = 0.2;
            get_alpha = -0.02;
            ktime = 10;
        }
    }
    
    if keyboard_check_pressed(ord('W')) wuss=!wuss;
    if keyboard_check_pressed(ord('G')) guy=!guy;
    
    if keyboard_check(189) room_speed=clamp(room_speed-1,5,50);
    if keyboard_check(187) room_speed=clamp(room_speed+1,5,50);
}


if ondeal {
    if mouse_wheel_up() {DEAL=clamp(DEAL+1,-100,100);}
    else if mouse_wheel_down() {DEAL=clamp(DEAL-1,-100,100);}
    
    if mouse_check_button_pressed(mb_middle) {DEAL=100;}
}

if mouse_check_button(mb_left) &amp;&amp; ontp {
    with(obj_player) {x=mouse_x; y=mouse_y;}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fix
if reroom {
    if keyboard_check_pressed(ord('P')) reroom_idx=0;    
    if keyboard_check(ord('P')) {
        if 150&lt;=reroom_idx++ {
            reroom_idx=0;
            room_restart();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy keyblock(Stage4)
with(obj_lock) if other.ki[lock] instance_destroy();
with(obj_key) if other.ki[image_index] instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed=50;
scp_bgm();
if instance_exists(obj_player) &amp;&amp; obj_player.FLIP {
    view_angle=180;
    sys_cam.Toangle=180;
}
if room==rmstage04a showkey=true;
else showkey=false;

if room==rmstage06d towershader = true;
else towershader = false;

event_user(0);
with(obj_lockdestroy) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wuss mode
if wuss {
    if room==rmboss1b
    || room==rmboss02
    || room==rmboss03
    || room==rmboss04 
    || room==rmboss05 
    || room==rmboss06 
    || room==rmstage04b {kid_mxhp=3; kid_hp=3;}
    else {kid_mxhp=1; kid_hp=1;}
}

else {
    kid_mxhp=1; kid_hp=1;
}

//kid_mxhp=21; kid_hp=21;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UI
if room==Init
|| room==title
|| room==rmsin2
|| room==rmsin3
|| room==rmlastboss
|| room==rmending1
|| room==rmending2
|| room==rmending3
|| room==rmending4
|| room==rmending5
|| room==rmending6
|| room==rmending7
|| room==rmaltar
|| !uiset {onui=false;}
else {onui=true;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fix
switch(room) {
    case Init:
    case title:
    case rmsin01:
    case rmsin2:
    case rmending1:
    case rmending2:
    case rmending3:
    case rmending4:
    case rmending5:
    case rmending6:
    case rmending7:
        reroom=false;
    break;
    default:
        reroom=true;
    break;
}

reroom_idx=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if 0&lt;vtime {
    if valpha&lt;1 {valpha+=0.04;}
    vtime-=1;
} else if 0&lt;valpha {valpha-=0.02;}

if 0&lt;valpha{
    draw_sprite_ext(spr_sub,0,view_xview+400,view_yview+548-32,1,1,0,c_white,valpha-0.4);
    draw_set_halign(fa_center); draw_set_font(Font1);
    draw_text_colour(view_xview+400,view_yview+545-32,vname,c_white,c_white,c_white,c_white,valpha);
    draw_set_halign(fa_left); draw_set_font(Font0);
}

if showkey {
    var t;
    keyarr[0]=3;
    keyarr[1]=1;
    keyarr[2]=2;
    keyarr[3]=4;
    keyarr[4]=6;
    keyarr[5]=5;
    for(var i=0;i&lt;=5;i++) {
        if ki[keyarr[i]] t=keyarr[i]; else t=0;
        draw_sprite_ext(spr_icon_key,t,view_xview+view_wview-12-13*(5-i),view_yview+16,1,1,0,c_white,1);
    }
}

/*
if !(room==Init || room==title || room==rmlastready || room==rmlastboss) {
    draw_set_font(Font2);
    draw_set_alpha(0.5);
    draw_rectangle_colour(view_xview,view_yview+view_hview,view_xview+view_wview,view_yview+view_hview-24,c_black,c_black,c_black,c_black,0);
    draw_set_alpha(1);
    draw_set_color(c_white);
    draw_text(view_xview+4,view_yview+view_hview-20,es('info','death')+": "+string(death));
    draw_set_halign(fa_right);
    draw_text(view_xview+view_wview-4,view_yview+view_hview-20,es('info','time')+": "+string(time));
    draw_set_font(Font0); draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Time &amp; death

//if keyboard_check(ord('O')) show_message(window_get_height());

var wh = display_get_gui_height();
var ww=800/608*wh;
if onui {
    draw_set_font(Font2);
    draw_set_alpha(0.5);
    draw_rectangle_colour(0,wh-24,ww,wh,c_black,c_black,c_black,c_black,0);
    draw_set_alpha(1);
    draw_set_color(c_white);
    draw_text(4,wh-20,es('info','death')+": "+string(death));
    draw_set_halign(fa_right);
    draw_text(ww-8,wh-20,es('info','time')+": "+string(time));
    draw_set_font(Font0); draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cheat
var a='';
if cheat &amp;&amp; (ontp || ongod || vismask || ondeal || showvar || wuss) {
    if ongod a+='God Mod#';
    if ontp a+='Enable Teleport#';
    if ondeal a+='Enable Damage Control('+string(DEAL)+')#';
    if vismask a+='Mask Visible#';
    if showvar {
        a+='fps: '+string(fps)+' ('+string(room_speed)+')#';
        a+='mouse: '+string(mouse_x)+','+string(mouse_y)+'('+string(display_mouse_get_x())+','+string(display_mouse_get_y())+')'+'#';
        a+='gui size: '+string(display_get_gui_width())+','+string(display_get_gui_height())+'#';
        a+='instance: '+string(instance_number(all))+'#';
        a+='lastkey: '+string(keyboard_key)+'#';
        a+='P: '+string(reroom_idx)+'#';
        a+='currentroom: '+room_get_name(room)+'#';
        with(obj_player) {
            a+='[obj_player] '+'('+string(x)+","+string(y)+")#";
            a+=' FLIP: '+string(FLIP)+'#';
            a+=' OnBlock: '+string(onBlock)+'#';
            a+=' djump: '+string(djump)+'#';
            a+=' gravity: '+string(gravity)+'#';
            a+=' reb: '+string(debug_reb)+'#';
            a+=' hmore: '+string(hjump_spd)+' ('+string(hjump_break)+')#';
            //a+=' dir' +string(firstinput)+' '+string(predir)+' '+string(predir*firstinput)+'#';
        }
        with(sys_cam) {
            a+='[sys_cam] '+'('+string(x-400)+","+string(y-304)+")#";
            a+=' type: '+string(type)+"   target: "+string(object_get_name(target))+"#";
            a+=' xrange: '+string(xmin)+"~"+string(xmax)+"#";
            a+=' yrange: '+string(ymin)+"~"+string(ymax)+"#";
            a+=' fade: '+string(fade_set)+' ('+string(fade_get)+")#";
            a+=' view angle: '+string(view_angle)+"#";
        }
        with(obj_replay)
        {
            var i=clamp(rec_pos,0,ds_list_size(ds_x)-1);
            var X=ds_list_find_value(ds_x,i);
            var Y=ds_list_find_value(ds_y,i);
            var R=ds_list_find_value(ds_rm,i);
            var SPR=ds_list_find_value(ds_spr,i);
            var IDX=ds_list_find_value(ds_idx,i);
            var XS=ds_list_find_value(ds_xs,i);
            var YS=ds_list_find_value(ds_ys,i);
            var ST=ds_list_find_value(ds_st,i);
            a+='[obj_replay]#';
            a+=' visible : ' + string(visible) +'#';
            a+=' rec_play : ' + string(rec_playing) +'#';
            a+=' rec_speed : ' + string(rec_speed) +'#';
            a+=' rec_pos : ' + string(rec_pos) +'#';
            a+='('+string(X)+','+string(Y)+')#';
            a+='room : ' + string(room_get_name(R)) + '#';
            a+='sprite : ' + string(SPR) + '('+string(IDX)+')#';
            a+='st : ' + string(ST) +'#'
            
        }
        
        with(obj_trigger) {
            if On {
                a+='[obj_trigger]#';
                a+=' trigger: '+string(cs)+'#';
                a+=' pos: '+string(ps)+'#';
            }
        }
        with(sys_lighting) {
            a+='[sys_lighting]#';
            a+=' bright: '+string(val)+'#';
        }
        with(obj_ignis) {
            var i=ds_list_size(echo_x);
            
            a+='[obj_ignis]#';
            for(;0&lt;=i;i--) {
                tx=string(ds_list_find_value(echo_x,i));
                ty=string(ds_list_find_value(echo_y,i));
                txs=string(ds_list_find_value(echo_xs,i));
                tys=string(ds_list_find_value(echo_ys,i));
                talp=string(ds_list_find_value(echo_alp,i));
                tang=string(ds_list_find_value(echo_ang,i));
                tb=string(ds_list_find_value(echo_b,i));
                a+=tx+','+talp+'#';
                //draw_sprite_ext(spr_ignis,0,tx,ty,txs,tys,tang,tb,talp * (i+1)/psize);
            }
        }
        with(obj_sorcerer) {
            a+='[obj_ignis]#';
            a+=' shield armor: '+string(1 - SHIELD/MAXSHIELD)+'#';
        }
        with(obj_vampair) {
            a+='[obj_vampire]#';
            a+=' timeline: '+string(timeline_position)+'#';
        }
    }
}
//a+=string(room);

draw_set_font(Font2); draw_set_color(c_black);
draw_text(-1,0,a);
draw_text(1,0,a);
draw_text(0,-1,a);
draw_text(0,1,a);
draw_set_color(c_white); draw_text(0,0,a);
draw_set_font(Font0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
